invisible(lapply(pkgs, library, character.only = TRUE))
library(rlang)
pkgs <- c("tidyverse", "ggplot2", "ggfortify", "gganimate", "magick")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
invisible(lapply(pkgs, library, character.only = TRUE))
confirmed <- read_csv(file = "cases.csv") ## from google sheet
US_confirmed[,4] <- NULL
US_confirmed <- US_confirmed %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
###############
## Chart
###############
g1 <- US_confirmed %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate"),
values = c("Confirmed"="#e06666", "Estimate"="#6d9eeb")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
## animate(g1)
g1 +
transition_reveal(Date) +
view_follow()
US_confirmed
view(US_confirmed)
pkgs <- c("tidyverse", "ggplot2", "ggfortify", "gganimate", "magick")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
invisible(lapply(pkgs, library, character.only = TRUE))
###############
## Get Data
###############
confirmed <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
US_confirmed <- confirmed %>% filter(`Country/Region` == "US")
today <- Sys.Date()
today <- format(Sys.Date(), format("%m/%d/%y"))
x.colnames <- seq(as.Date("3/1/20", format("%m/%d/%Y")), today, by = 1)
sum(US_confirmed$`3/25/20`) ## today's date
sum(US_confirmed$`3/26/20`) ## today's date
US_confirmed <- read_csv(file = "cases.csv") ## from google sheet
US_confirmed[,4] <- NULL
US_confirmed <- US_confirmed %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
###############
## Chart
###############
g1 <- US_confirmed %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate"),
values = c("Confirmed"="#e06666", "Estimate"="#6d9eeb")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
## animate(g1)
g1 +
transition_reveal(Date) +
view_follow()
install.packages(c("dplyr", "fs"))
install.packages(c("class", "foreign", "lattice", "nlme", "nnet", "survival")
)
install.packages(c("class", "foreign", "lattice", "nlme", "nnet", "survival"))
install.packages(c("dplyr", "fs"))
install.packages(c("class", "foreign", "lattice", "nlme", "nnet", "survival"), lib="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
yes
install.packages(c("dplyr", "fs"))
install.packages(c("dplyr", "fs"))
install.packages(c("dplyr", "fs"))
install.packages(c("dplyr", "fs"))
install.packages(c("dplyr", "fs"))
install.packages(c("class", "foreign", "lattice", "nlme", "nnet", "survival")
)
install.packages("survival", lib="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
install.packages(c("nlme", "nnet"), lib="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
install.packages(c("lattice", "nlme"), lib="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
install.packages(c("class", "foreign", "nlme"), lib="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
install.packages("nlme", lib="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
install.packages("dplyr")
installed_packages <- pkgs %in%
rownames(installed.packages())
installed_packages
installed.packages()
installed_packages <- installed.packages()
installed_packages
if (any(installed_packages == TRUE)) {
uninstall.packages(pkgs[!installed_packages])
}
pkgs <- installed.packages()
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == TRUE)) {
uninstall.packages(pkgs[!installed_packages])
}
if (any(installed_packages == TRUE)) {
remove.packages(pkgs[!installed_packages])
}
pkgs <- c("tidyverse", "ggplot2", "ggfortify", "gganimate", "magick")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == TRUE)) {
install.packages(pkgs[!installed_packages])
}
invisible(lapply(pkgs, library, character.only = TRUE))
pkgs <- installed.packages()
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == TRUE)) {
remove.packages(pkgs[!installed_packages])
}
pkgs <- installed.packages()
View(pkgs)
View(pkgs)
pkgs$Package
pkgs
pkgs <- installed.packages()
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == TRUE)) {
remove.packages(pkgs[!installed_packages])
}
View(pkgs)
class(installed.packages())
class(pkgs)
View(pkgs)
pkgs[,1]
pkgs <- installed.packages()
pkgs <- pkgs[,1]
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == TRUE)) {
remove.packages(pkgs[!installed_packages])
}
pkgs <- installed.packages()
pkgs <- pkgs[,1]
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == TRUE)) {
remove.packages(pkgs[!installed_packages])
}
library(animation)
library(askpass)
detach("package:askpass", unload = TRUE)
detach("package:animation", unload = TRUE)
.libpaths
.libpaths()
myPaths <- .libPaths()
pkgs <- c("tidyverse", "ggplot2", "ggfortify", "gganimate", "magick")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
pkgs <- c("tidyverse", "ggplot2", "ggfortify", "gganimate", "magick")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
install.packages(pkgs)
pkgs <- c("tidyverse", "ggplot2", "ggfortify", "gganimate", "magick")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
pkgs <- c("tidyverse", "ggplot2", "ggfortify", "gganimate", "magick")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
?invisible
invisible(lapply(pkgs, library, character.only = TRUE))
pkgs <- c("tidyverse", "ggplot2", "ggfortify", "gganimate", "magick")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
invisible(lapply(pkgs, library, character.only = TRUE))
###############
## Get Data
###############
confirmed <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
US_confirmed <- confirmed %>% filter(`Country/Region` == "US")
today <- Sys.Date()
today <- format(Sys.Date(), format("%m/%d/%y"))
x.colnames <- seq(as.Date("3/1/20", format("%m/%d/%Y")), today, by = 1)
sum(US_confirmed$`3/25/20`) ## today's date
sum(US_confirmed$`3/25620`) ## today's date
sum(US_confirmed$`3/26/20`) ## today's date
sum(US_confirmed$`3/27/20`) ## today's date
sum(US_confirmed$`3/28/20`) ## today's date
US_confirmed <- read_csv(file = "cases.csv") ## from google sheet
US_confirmed[,4] <- NULL
US_confirmed <- US_confirmed %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
###############
## Chart
###############
g1 <- US_confirmed %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate"),
values = c("Confirmed"="#e06666", "Estimate"="#6d9eeb")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
## animate(g1)
g1 +
transition_reveal(Date) +
view_follow()
g1 <- US_confirmed %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate"),
values = c("Confirmed"="#e06666", "Estimate"="#6d9eeb")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
US_confirmed <- read_csv(file = "cases.csv") ## from google sheet
US_confirmed[,4] <- NULL
US_confirmed <- US_confirmed %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
view(US_confirmed)
US_confirmed <- read_csv(file = "cases.csv") ## from google sheet
US_confirmed[,4] <- NULL
US_confirmed <- US_confirmed %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
g1 <- US_confirmed %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate"),
values = c("Confirmed"="#e06666", "Estimate"="#6d9eeb")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
US_confirmed <- read_csv(file = "cases.csv") ## from google sheet
US_confirmed[,4] <- NULL
view(US_confirmed)
US_confirmed <- read_csv(file = "cases.csv") ## from google sheet
US_confirmed[,4] <- NULL
view(US_data)
US_data_rev <- US_data %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
###############
## Chart
###############
g1 <- US_data_rev %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate"),
values = c("Confirmed"="#e06666", "Estimate"="#6d9eeb")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
## animate(g1)
g1 +
transition_reveal(Date) +
view_follow()
US_data <- read_csv(file = "cases.csv") ## from google sheet
US_data[,4] <- NULL
view(US_data)
US_data_rev <- US_data %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
view(US_data_rev)
US_data <- read.csv(file = "cases.csv") ## from google sheet
US_data[,4] <- NULL
view(US_data)
US_data_rev <- US_data %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
view(US_data_rev)
Sys.Date()-14
US_data <- read_csv(file = "cases.csv") ## from google sheet
US_data[,4] <- NULL
view(US_data)
US_data_rev <- US_data %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
view(US_data_rev)
g1 <- US_data_rev %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate"),
values = c("Confirmed"="#e06666", "Estimate"="#6d9eeb")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
g1 +
transition_reveal(Date) +
view_follow()
US_data <- read_csv(file = "cases.csv") ## from google sheet
US_data[,4] <- NULL
view(US_data)
US_data_rev <- US_data %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
view(US_data_rev)
g1 <- US_data_rev %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate"),
values = c("Confirmed"="#e06666", "Estimate"="#6d9eeb")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
g1 <- US_data_rev %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate 1.30", "Estimate 1.33"),
values = c("Confirmed"="#e06666", "Estimate 1.30"="#6d9eeb", "Estimate 1.33"="93c47d")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
g1 <- US_data_rev %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate 1.30", "Estimate 1.33"),
values = c("Confirmed"="#e06666", "Estimate 1.30"="#6d9eeb", "Estimate 1.33"="#93c47d")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
pkgs <- c("tidyverse", "dplyr", "reshape", "ggplot2", "ggrepel", "jcolors")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
invisible(lapply(pkgs, library, character.only = TRUE))
#the countries we want to look at
countries <- c('US','China','Italy','Spain','Iran','France','Korea, South','Japan','United Kingdom')
#get data and clean it up
d <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")) %>%
select(-Lat, -Long) %>% melt(id = c("Province.State", "Country.Region")) %>%
arrange(Country.Region, Province.State) %>%
dplyr::rename(
date = variable,
country = Country.Region,
state = Province.State
) %>%
mutate(
date = substring(date, 2),
date = as.Date(date, format = "%m.%d.%y")
)
recent = max(d$date)
#aggregate for the countries with dis-aggregated data
#and get days since 10th death
agg <- d %>% group_by(country, date) %>%
summarize(deaths = sum(value)) %>%
mutate(d10 = ifelse(deaths >= 10, 1, 0)) %>%
filter(d10 == 1) %>% ungroup() %>%
group_by(country) %>%
mutate(min_date = min(date),
days_10 = as.numeric(date - min_date))
#for labeling countries at the end
plot <- agg %>%
filter(country %in% countries) %>%
filter(days_10 <= 35) %>%
group_by(country) %>%
mutate(last = ifelse(row_number() == n(), 1, 0))
#make the graphic
plot %>%
ggplot(aes(x=days_10, y=deaths, group = country, color = country, label = country)) +
geom_point(size=4, shape=16) +
geom_line(size = 2) +
theme_minimal() +
labs(x = "Days since 10th death",
y = "Total deaths",
caption = "Figure: @benbbaldwin | Data: @JHU",
title = "COVID-19 Tracker: Deaths Since 10th Death") +
theme_bw() +
theme(
legend.position = "none",
plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.text.x=element_text(hjust=0.5)
)   +
scale_color_jcolors(palette="pal8") +
geom_text_repel(
data = filter(plot, last == 1),
color = "black",
nudge_x = -2,
nudge_y = 500,
size = 5,
) +
annotate("text",x=5, y= 8000, label = paste0("Most recent update:\n",month(recent),"-",day(recent)), color="red", size=5)
ggsave("deaths_since_10.png", dpi=800)
###############
## Packages
###############
pkgs <- c("tidyverse", "ggplot2", "ggfortify", "gganimate", "magick")
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
invisible(lapply(pkgs, library, character.only = TRUE))
###############
## Get Data
###############
confirmed <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
US_confirmed <- confirmed %>% filter(`Country/Region` == "US")
today <- Sys.Date()
today <- format(Sys.Date(), format("%m/%d/%y"))
x.colnames <- seq(as.Date("3/1/20", format("%m/%d/%Y")), today, by = 1)
sum(US_confirmed$`3/28/20`) ## today's date
sum(US_confirmed$`3/29/20`) ## today's date
sum(US_confirmed$`3/30/20`) ## today's date
US_data <- read_csv(file = "cases.csv") ## from google sheet
US_data[,4] <- NULL
view(US_data)
US_data_rev <- US_data %>% filter(Date >= Sys.Date()-14 & Date <= Sys.Date()+7)
view(US_data_rev)
###############
## Chart
###############
g1 <- US_data_rev %>% ggplot(
aes(x = Date, y = Confirmed, color = Type)) +
geom_point(aes(group = seq_along(Date))) + ## include line on chart
geom_line(size = 1.5) + ## line width
ylim(0, 250000) + ## y axis limit
xlim(Sys.Date()-14, Sys.Date()+5) + ## x axis limit
labs(title = "Confirmed vs Estimate 33% inc/day U.S. COVID-19 cases",
caption = "Source: github.com/CSSEGISandData",
y = "Confirmed Cases",
color=NULL) +  # title and caption
scale_color_manual(labels = c("Confirmed", "Estimate 1.30", "Estimate 1.33"),
values = c("Confirmed"="#e06666", "Estimate 1.30"="#6d9eeb", "Estimate 1.33"="#93c47d")) +  # line color
theme(axis.text.x = element_text(angle = 45, vjust=0.5, size = 12), # rotate x axis text
axis.text.y = element_text(size = 12),
panel.grid.minor = element_blank()) # turn off minor grid
print(g1)
g1 +
transition_reveal(Date) +
view_follow()
sum(US_confirmed$`3/30/20`) ## today's date
